{
  "test_name": "baseline_20250811",
  "total_code_cells_attempted": 37,
  "total_failures": 22,
  "final_successful_cells": 5,
  "final_failed_cells": 13,
  "failure_rate": 0.5945945945945946,
  "final_success_rate": 0.2777777777777778,
  "failed_fix_attempts_per_step": {
    "endo_ablation_081125/test_results_baseline_20250811_121646/logs/test_baseline_log_20250811_121714.log": {
      "1": {
        "1": 2,
        "2": 3,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0
      },
      "2": {
        "1": 1,
        "2": 3,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0
      },
      "3": {
        "1": 3,
        "2": 2
      }
    }
  },
  "analyses": [
    {
      "notebook_path": "endo_ablation_081125/test_results_baseline_20250811_121646/outputs/test_baseline_20250811_121714/test_baseline_analysis_1.ipynb",
      "total_code_cells": 9,
      "successful_cells": 3,
      "failed_cells": 6,
      "success_rate": 0.3333333333333333,
      "cell_details": [
        {
          "cell_index": 1,
          "success": true,
          "code_preview": "import scanpy as sc\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport se..."
        },
        {
          "cell_index": 4,
          "success": true,
          "code_preview": "\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Assum..."
        },
        {
          "cell_index": 7,
          "success": false,
          "code_preview": "\nimport scanpy as sc\nimport numpy as np\nimport pandas as pd\n\n# Ensure 'day' is a categorical column\n..."
        },
        {
          "cell_index": 10,
          "success": false,
          "code_preview": "\nimport scanpy as sc\nimport numpy as np\nimport pandas as pd\n\n# Ensuring 'day' is a categorical colum..."
        },
        {
          "cell_index": 13,
          "success": true,
          "code_preview": "import scvi\nimport anndata as ad\nimport numpy as np\n\nnp.random.seed(42)\n\n# Ensure correct setup of t..."
        },
        {
          "cell_index": 16,
          "success": false,
          "code_preview": "import scanpy as sc\nimport matplotlib.pyplot as plt\n\n# Compute the neighborhood graph using SCVI lat..."
        },
        {
          "cell_index": 19,
          "success": false,
          "code_preview": "import scanpy as sc\nimport numpy as np\nimport matplotlib.pyplot as plt\n# Define immune subtype marke..."
        },
        {
          "cell_index": 22,
          "success": false,
          "code_preview": "import scanpy as sc\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Define immune subtype mark..."
        },
        {
          "cell_index": 25,
          "success": false,
          "code_preview": "import scanpy as sc\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Ensure 'day' in categorica..."
        }
      ]
    },
    {
      "notebook_path": "endo_ablation_081125/test_results_baseline_20250811_121646/outputs/test_baseline_20250811_121714/test_baseline_analysis_2.ipynb",
      "total_code_cells": 9,
      "successful_cells": 2,
      "failed_cells": 7,
      "success_rate": 0.2222222222222222,
      "cell_details": [
        {
          "cell_index": 1,
          "success": true,
          "code_preview": "import scanpy as sc\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport se..."
        },
        {
          "cell_index": 4,
          "success": false,
          "code_preview": "\nimport scanpy as sc\n\n# Ensure data is loaded in variable `adata` and check adata.raw presence\nif ad..."
        },
        {
          "cell_index": 7,
          "success": false,
          "code_preview": "\nimport scanpy as sc\n\n# Ensure data is loaded in variable `adata` and check adata.raw presence\nif ha..."
        },
        {
          "cell_index": 10,
          "success": true,
          "code_preview": "\nimport scvi\nfrom scvi.model import SCVI\n\n# Set up AnnData with scvi-tools\nSCVI.setup_anndata(adata)..."
        },
        {
          "cell_index": 13,
          "success": false,
          "code_preview": "import scanpy as sc\nimport pandas as pd\nfrom scipy import stats\n\n# Perform differential gene express..."
        },
        {
          "cell_index": 16,
          "success": false,
          "code_preview": "\nimport scanpy as sc\nimport numpy as np\nimport pandas as pd\nimport networkx as nx\nfrom scipy.stats i..."
        },
        {
          "cell_index": 19,
          "success": false,
          "code_preview": "import scanpy as sc\nfrom scipy import stats\nimport pandas as pd\n\n# Ensure stromal fibroblast data is..."
        },
        {
          "cell_index": 22,
          "success": false,
          "code_preview": "\nimport scanpy as sc\nimport numpy as np\nimport pandas as pd\n\n# Limit analysis to relevant cell types..."
        },
        {
          "cell_index": 25,
          "success": false,
          "code_preview": "import scanpy as sc\nimport numpy as np\n\n# Filter for unciliated epithelial cells for pseudotime traj..."
        }
      ]
    }
  ],
  "errors": []
}