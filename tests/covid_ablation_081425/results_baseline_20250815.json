{
  "test_name": "baseline_20250815",
  "total_code_cells_attempted": 41,
  "total_failures": 20,
  "final_successful_cells": 12,
  "final_failed_cells": 6,
  "failure_rate": 0.4878048780487805,
  "final_success_rate": 0.6666666666666666,
  "failed_fix_attempts_per_step": {
    "covid_ablation_081425/test_results_baseline_20250815_002439/logs/test_baseline_log_20250815_002506.log": {
      "1": {
        "1": 0,
        "2": 0,
        "3": 1,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0
      },
      "2": {
        "1": 1,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 3,
        "6": 0,
        "7": 0,
        "8": 0
      },
      "3": {
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 3,
        "7": 3,
        "8": 2
      }
    }
  },
  "analyses": [
    {
      "notebook_path": "covid_ablation_081425/test_results_baseline_20250815_002439/outputs/test_baseline_20250815_002505/test_baseline_analysis_1.ipynb",
      "total_code_cells": 9,
      "successful_cells": 4,
      "failed_cells": 5,
      "success_rate": 0.4444444444444444,
      "cell_details": [
        {
          "cell_index": 1,
          "success": true,
          "code_preview": "import scanpy as sc\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport se..."
        },
        {
          "cell_index": 4,
          "success": true,
          "code_preview": "import scanpy as sc\n\n# Ensure required columns exist in the data\nif 'singler' in adata.obs.columns a..."
        },
        {
          "cell_index": 7,
          "success": true,
          "code_preview": "import scanpy as sc\n\n# Ensure required columns exist in the data\nrequired_columns = ['singler', 'Sta..."
        },
        {
          "cell_index": 10,
          "success": true,
          "code_preview": "\nimport scanpy as sc\nfrom scvi.data import setup_anndata\nfrom scvi.model import SCVI\n\n# Prepare the ..."
        },
        {
          "cell_index": 13,
          "success": false,
          "code_preview": "import scanpy as sc\nfrom scvi.data import setup_anndata\nfrom scvi.model import SCVI\n\n# Prepare the A..."
        },
        {
          "cell_index": 16,
          "success": false,
          "code_preview": "import scanpy as sc\nfrom scvi.data import setup_anndata\nfrom scvi.model import SCVI\nimport pandas as..."
        },
        {
          "cell_index": 19,
          "success": false,
          "code_preview": "import scanpy as sc\n\n# Subset the data for immune cell types, focusing on specific T cell subtypes\ni..."
        },
        {
          "cell_index": 22,
          "success": false,
          "code_preview": "import scanpy as sc\n\n# Subset the data for CD4+, CD8+, and \u03b3\u03b4 T cell subtypes\nimmune_cells = ['CD8 T..."
        },
        {
          "cell_index": 25,
          "success": false,
          "code_preview": "import scanpy as sc\n\n# Check for the necessary columns related to the hypothesis, including Donor in..."
        }
      ]
    },
    {
      "notebook_path": "covid_ablation_081425/test_results_baseline_20250815_002439/outputs/test_baseline_20250815_002505/test_baseline_analysis_3.ipynb",
      "total_code_cells": 0,
      "successful_cells": 0,
      "failed_cells": 0,
      "success_rate": 0.0,
      "cell_details": [],
      "error": "Notebook does not appear to be JSON: '{\\n \"cells\": [\\n  {\\n   \"cell_type\": \"m..."
    },
    {
      "notebook_path": "covid_ablation_081425/test_results_baseline_20250815_002439/outputs/test_baseline_20250815_002505/test_baseline_analysis_2.ipynb",
      "total_code_cells": 9,
      "successful_cells": 8,
      "failed_cells": 1,
      "success_rate": 0.8888888888888888,
      "cell_details": [
        {
          "cell_index": 1,
          "success": true,
          "code_preview": "import scanpy as sc\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport se..."
        },
        {
          "cell_index": 4,
          "success": true,
          "code_preview": "\nimport scanpy as sc\nfrom scipy.stats import mannwhitneyu\nimport numpy as np\n\n# Define glycolytic ge..."
        },
        {
          "cell_index": 7,
          "success": true,
          "code_preview": "import scanpy as sc\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Ensure data is correct\n..."
        },
        {
          "cell_index": 10,
          "success": true,
          "code_preview": "import scanpy as sc\nimport matplotlib.pyplot as plt\n\n# Plotting PKM expression in CD14+ Monocytes\nsc..."
        },
        {
          "cell_index": 13,
          "success": true,
          "code_preview": "import scanpy as sc\nimport pandas as pd\nfrom scipy.stats import mannwhitneyu\nimport matplotlib.pyplo..."
        },
        {
          "cell_index": 16,
          "success": false,
          "code_preview": "\nimport scanpy as sc\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n# Confirm the presence of ..."
        },
        {
          "cell_index": 19,
          "success": true,
          "code_preview": "import scanpy as sc\n\n# Filter for monocyte subtypes\nmonocytes = adata[adata.obs['cell_type_fine'].is..."
        },
        {
          "cell_index": 22,
          "success": true,
          "code_preview": "import scanpy as sc\n\n# Filter for monocyte subtypes\nmonocytes = adata[adata.obs['cell_type_fine'].is..."
        },
        {
          "cell_index": 25,
          "success": true,
          "code_preview": "import scanpy as sc\n\n# Filter data to retain only monocyte subtypes\nmonocytes = adata[adata.obs['cel..."
        }
      ]
    }
  ],
  "errors": []
}